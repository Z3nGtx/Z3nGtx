server code


#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <string.h>

#define SHM_KEY 12345   // Shared memory key
#define SHM_SIZE 1024   // Size of the shared memory segment

int main() {
    int shmid;
    char *shmaddr;

    // Create a shared memory segment
    shmid = shmget(SHM_KEY, SHM_SIZE, IPC_CREAT | 0666);  // Create shared memory
    if (shmid < 0) {
        perror("shmget");
        exit(1);
    }

    // Attach the shared memory segment to the server's address space
    shmaddr = shmat(shmid, NULL, 0);  // Attach the shared memory
    if (shmaddr == (char *) -1) {
        perror("shmat");
        exit(1);
    }

    // Write a message to the shared memory segment
    printf("Writing to shared memory...\n");
    char *message = "Hello from DVVPCOE, Ahmednagar Server!";
    strncpy(shmaddr, message, SHM_SIZE);  // Copy the message into shared memory

    // Detach the shared memory segment
    if (shmdt(shmaddr) == -1) {
        perror("shmdt");
        exit(1);
    }

    printf("Message written to shared memory: %s\n", message);

    // Optionally, mark the shared memory for removal when no longer needed
    // shmctl(shmid, IPC_RMID, NULL);  // Uncomment this if you want to delete the shared memory segment
    return 0;
}




How to Run:
Compile the server and client code:

Compile the server: gcc server.c -o server
Compile the client: gcc client.c -o client
Run the server:

First, run the server in one terminal window: ./server
Run the client:

In another terminal window, run the client: ./client
Expected Output:

The server will write a message to the shared memory.
The client will read the message and display it.



client code

#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#define SHM_KEY 12345  // Shared memory key
#define SHM_SIZE 1024  // Size of the shared memory segment

int main() {
    int shmid;
    char *shmaddr;

    // Locate the shared memory segment created by the server
    shmid = shmget(SHM_KEY, SHM_SIZE, 0666);  // Get the shared memory
    if (shmid < 0) {
        perror("shmget");
        exit(1);
    }

    // Attach the shared memory segment to the client's address space
    shmaddr = shmat(shmid, NULL, 0);  // Attach to the shared memory
    if (shmaddr == (char *) -1) {
        perror("shmat");
        exit(1);
    }

    // Read the message from the shared memory segment
    printf("Reading from shared memory...\n");
    printf("Message from shared memory: %s\n", shmaddr);  // Print the message

    // Detach the shared memory segment
    if (shmdt(shmaddr) == -1) {
        perror("shmdt");
        exit(1);
    }

    return 0;
}

