#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, i, j, head, total_movement = 0;

    // Input the number of requests
    printf("Enter the number of requests: ");
    scanf("%d", &n);

    // Input the request sequence
    int requests[n], completed[n];
    printf("Enter the request sequence: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
        completed[i] = 0;  // Initially, mark all requests as uncompleted
    }

    // Input the initial head position
    printf("Enter the initial head position: ");
    scanf("%d", &head);

    // Processing each request based on SSTF
    for (i = 0; i < n; i++) {
        int min = 100000, min_index = -1;

        // Find the uncompleted request closest to the head position
        for (j = 0; j < n; j++) {
            if (!completed[j] && abs(head - requests[j]) < min) {
                min = abs(head - requests[j]);
                min_index = j;
            }
        }

        // Service the closest request
        completed[min_index] = 1; // Mark the request as completed
        total_movement += abs(head - requests[min_index]);
        head = requests[min_index];  // Move the head to the serviced request position

        // Print the serviced request
        printf("Serviced request: %d\n", head);
    }

    // Print the total head movement
    printf("Total head movement: %d\n", total_movement);

    return 0;
}
