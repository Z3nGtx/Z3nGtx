# Assignment 2 : Regression Technique
# Download temperature data from below link.
# https://www.kaggle.com/venky73/temperatures-of- india?select=temperatures.csv
# This data consists of temperatures of INDIA averaging the temperatures of all places month
# wise. Temperatures values are recorded in CELSIUS
# Apply Linear Regression using suitable library function and predict the Month-wise.
# Assess the performance of regression models using MSE, MAE and R-
Square metrics
# Visualize simple regression model. import matplotlib.pyplot as plt import numpy as np


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load the dataset
temp_dataset = pd.read_csv("temperatures.csv")

# Display the first few rows, shape, and missing values
print(temp_dataset.head())
print("Dataset Shape:", temp_dataset.shape)
print("Missing Values:\n", temp_dataset.isnull().sum())

# Prepare the data for January
X = temp_dataset[["YEAR"]]  # Input column
y = temp_dataset["JAN"]      # Target column

# Split the dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print("Train Set Shape:", X_train.shape)
print("Test Set Shape:", X_test.shape)

# Instantiate and fit the Linear Regression model
lr = LinearRegression()
lr.fit(X_train, y_train)

# Predict the target values for train and test sets
y_train_lr = lr.predict(X_train)
y_test_lr = lr.predict(X_test)

# Display the model's intercept and slope
print("Intercept:", lr.intercept_)
print("Slope:", lr.coef_)

# Compute and display the accuracy (R-squared score) on test data
print("Linear Regression: Accuracy on Test Data: {:.3f}".format(lr.score(X_test, y_test)))

# Visualize the annual temperature trend
plt.plot(X, y, color="purple")
plt.xlabel("Year")
plt.ylabel("Temperature")
plt.title("Annual Temperature from 1901-2017")
plt.show()

# Plot the regression line for January
plt.figure(figsize=(8, 6))
plt.scatter(X_test, y_test, color="blue", label="Testing Set")
plt.scatter(X_train, y_train, color="red", label="Training Set")
plt.plot(X_train, y_train_lr, color="black", label="Best Fit Regression Line")
plt.legend()
plt.title("Temperature vs Year for Month of January")
plt.xlabel("Year")
plt.ylabel("Temperature")
plt.show()

# Calculate and print error metrics for the model on the test set
print("R-Squared Error:", r2_score(y_test, y_test_lr))
print("Mean Absolute Error:", mean_absolute_error(y_test, y_test_lr))
print("Mean Squared Error:", mean_squared_error(y_test, y_test_lr))
print("Root Mean Squared Error:", np.sqrt(mean_squared_error(y_test, y_test_lr)))

 
Output :



